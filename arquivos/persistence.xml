<!-- <persistence xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd" 
	version="2.0"> unidade de persistencia com o nome financas <persistence-unit 
	name="Web2Sistema"> Implementação do JPA, no nosso caso Hibernate <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider> 
	Aqui são listadas todas as entidades <class>com.suam.bean.Usuario</class> 
	<properties> Propriedades JDBC <property name="javax.persistence.jdbc.driver" 
	value="com.mysql.jdbc.Driver" /> <property name="javax.persistence.jdbc.url" 
	value="jdbc:mysql://localhost/dbweb2" /> <property name="javax.persistence.jdbc.user" 
	value="root" /> <property name="javax.persistence.jdbc.password" value="root" 
	/> Configurações específicas do Hibernate <property name="hibernate.dialect" 
	value="org.hibernate.dialect.MySQL5InnoDBDialect" /> A propriedade hbm2ddl 
	é muito útil para ambientes de testes e provoca a criação e atualização automática 
	das tabelas e colunas no banco de dados. Com essa configuração habilitada 
	o Hibernate gerará uma tabela com o mesmo nome da entidade, gerando SQL, 
	o qual poderemos pedir que ele o mostre antes de executar. Assim fica mais 
	fácil de entender o trabalho do JPA. <property name="hibernate.hbm2ddl.auto" 
	value="update" /> <property name="hibernate.show_sql" value="true" /> <property 
	name="hibernate.format_sql" value="true" /> </properties> </persistence-unit> 
	</persistence> -->